<?xml version="1.0"?>
<tool id="edu.tamu.cpt.blast.gapped_gff3" name="BlastXML to GFF3" version="1.0">
  <description>converts blast XML data to gapped alignment</description>
  <version_command>python cpt_blastxml_to_gapped_gff3.py --version</version_command>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <command interpreter="python">cpt_blastxml_to_gapped_gff3.py
--galaxy
--outfile_supporting $__new_file_path__
--blastxml "${blastxml}"

$strict_m

--gff "${gff}"

--gff_files_path "${gff.files_path}"

--gff_format "${gff_format}"

--gff_id "${gff.id}"

</command>
  <inputs>
    <param help="Input Blast XML Data" label="blastxml" name="blastxml" optional="False" type="data"/>
    <param checked="" falsevalue="" help="One CIGAR spec specificies that Matches AND Mismatches are both represented as M. Another spec allows for = and X to disambiguate. Depending on your downstream pipeline, choose to use =/X or not." label="strict_m" name="strict_m" optional="True" truevalue="--strict_m" type="boolean"/>
  </inputs>
  <outputs>
    <data format="gff3" name="gff">
    </data>
  </outputs>
  <help>BlastXML files, when transformed to GFF3, do not normally show gaps in the
blast hits. This tool aims to fill that "gap".

For an input BlastXML file, this tool will produce a GFF3 file containing all
of the relevant information: start, stop, score, and the GAP as a CIGAR string.

`One CIGAR Spec &lt;http://www.sequenceontology.org/gff3.shtml&gt;`__ does not list X
and = for mismatches and matches, respsectively. However,
`Other CIGAR Specs &lt;http://samtools.github.io/hts-specs/SAMv1.pdf&gt;`__ do allow
for those characters. Given that I cannot anticipate which characters your
downstream analysis methods will support, this tool provides the option to use
just M (strict_m enabled), or to use both, as is the default.
</help>
  <tests/>
</tool>
